nextflow_workflow {

    name "Test Workflow FASTQ_TO_CRAM"
    script "subworkflows/local/fastq_to_aligned_cram/main.nf"
    workflow "FASTQ_TO_CRAM"

    test("test_fastq_to_cram_bwa_bamsormadup") {
        when {
            workflow {
                """
                // [meta, [fq_1,fq_2], aligner_index]
                input[0] = Channel.of([
                    [
                        id:'test',
                        samplename:'test',
                        single_end:false,
                        genome: [
                            fasta: "s3://test-data/genomics/homo_sapiens/genome/seq/GCA_000001405.15_GRCh38_full_plus_hs38d1_analysis_set_chr21.fna",
                            fai: "s3://test-data/genomics/homo_sapiens/genome/seq/GCA_000001405.15_GRCh38_full_plus_hs38d1_analysis_set_chr21.fna.fai"
                        ]
                    ], // meta map
                    [
                        file("https://github.com/nf-cmgg/test-datasets/raw/preprocessing/data/genomics/homo_sapiens/illumina/fastq/sample1_R1.fastq.gz", checkIfExists: true),
                        file("https://github.com/nf-cmgg/test-datasets/raw/preprocessing/data/genomics/homo_sapiens/illumina/fastq/sample1_R2.fastq.gz", checkIfExists: true)
                    ],
                    file("s3://test-data/genomics/homo_sapiens/genome/bwa/", checkIfExists: true),
                    file("s3://test-data/genomics/homo_sapiens/genome/seq/GCA_000001405.15_GRCh38_full_plus_hs38d1_analysis_set_chr21.fna")
                ])
                // aligner
                input[1] = "bwamem"
                // markdup
                input[2] = "bamsormadup"
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success}
            )
        }
    }

    test("test_fastq_to_cram_bwa_samtools_sormadup") {
        when {
            workflow {
                """
                // [meta, [fq_1,fq_2], aligner_index]
                input[0] = Channel.of([
                    [
                        id:'test',
                        samplename:'test',
                        single_end:false,
                        genome: [
                            fasta: "s3://test-data/genomics/homo_sapiens/genome/seq/GCA_000001405.15_GRCh38_full_plus_hs38d1_analysis_set_chr21.fna",
                            fai: "s3://test-data/genomics/homo_sapiens/genome/seq/GCA_000001405.15_GRCh38_full_plus_hs38d1_analysis_set_chr21.fna.fai"
                        ]
                    ], // meta map
                    [
                        file("https://github.com/nf-cmgg/test-datasets/raw/preprocessing/data/genomics/homo_sapiens/illumina/fastq/sample1_R1.fastq.gz", checkIfExists: true),
                        file("https://github.com/nf-cmgg/test-datasets/raw/preprocessing/data/genomics/homo_sapiens/illumina/fastq/sample1_R2.fastq.gz", checkIfExists: true)
                    ],
                    file("s3://test-data/genomics/homo_sapiens/genome/bwa/", checkIfExists: true),
                    file("s3://test-data/genomics/homo_sapiens/genome/seq/GCA_000001405.15_GRCh38_full_plus_hs38d1_analysis_set_chr21.fna")
                ])
                // aligner
                input[1] = "bwamem"
                // markdup
                input[2] = "samtools"
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success}
            )
        }
    }

    test("test_fastq_to_cram_bwa_samtools_sort") {
        when {
            workflow {
                """
                // [meta, [fq_1,fq_2], aligner_index]
                input[0] = Channel.of([
                    [
                        id:'test',
                        samplename:'test',
                        single_end:false,
                        genome: [
                            fasta: "s3://test-data/genomics/homo_sapiens/genome/seq/GCA_000001405.15_GRCh38_full_plus_hs38d1_analysis_set_chr21.fna",
                            fai: "s3://test-data/genomics/homo_sapiens/genome/seq/GCA_000001405.15_GRCh38_full_plus_hs38d1_analysis_set_chr21.fna.fai"
                        ]
                    ], // meta map
                    [
                        file("https://github.com/nf-cmgg/test-datasets/raw/preprocessing/data/genomics/homo_sapiens/illumina/fastq/sample1_R1.fastq.gz", checkIfExists: true),
                        file("https://github.com/nf-cmgg/test-datasets/raw/preprocessing/data/genomics/homo_sapiens/illumina/fastq/sample1_R2.fastq.gz", checkIfExists: true)
                    ],
                    file("s3://test-data/genomics/homo_sapiens/genome/bwa/", checkIfExists: true),
                    file("s3://test-data/genomics/homo_sapiens/genome/seq/GCA_000001405.15_GRCh38_full_plus_hs38d1_analysis_set_chr21.fna")
                ])
                // aligner
                input[1] = "bwamem"
                // markdup
                input[2] = "false"
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success}
            )
        }
    }

    test("test_fastq_to_cram_stub") {
        options: "-stub"
        when {
            workflow {
                """
                // [meta, [fq_1,fq_2], aligner_index]
                input[0] = Channel.of([
                    [
                        id:'test',
                        samplename:'test',
                        single_end:false,
                        genome: [
                            fasta: "s3://test-data/genomics/homo_sapiens/genome/seq/GCA_000001405.15_GRCh38_full_plus_hs38d1_analysis_set_chr21.fna",
                            fai: "s3://test-data/genomics/homo_sapiens/genome/seq/GCA_000001405.15_GRCh38_full_plus_hs38d1_analysis_set_chr21.fna.fai"
                        ]
                    ], // meta map
                    [
                        file("https://github.com/nf-cmgg/test-datasets/raw/preprocessing/data/genomics/homo_sapiens/illumina/fastq/sample1_R1.fastq.gz", checkIfExists: true),
                        file("https://github.com/nf-cmgg/test-datasets/raw/preprocessing/data/genomics/homo_sapiens/illumina/fastq/sample1_R2.fastq.gz", checkIfExists: true)
                    ],
                    file("s3://test-data/genomics/homo_sapiens/genome/bwa/", checkIfExists: true),
                    file("s3://test-data/genomics/homo_sapiens/genome/seq/GCA_000001405.15_GRCh38_full_plus_hs38d1_analysis_set_chr21.fna")
                ])
                // aligner
                input[1] = "bwamem"
                // markdup
                input[2] = "false"
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success}
            )
        }
    }
}
