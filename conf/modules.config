/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(":")[-1].tokenize("_")[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals("versions.yml") ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals("versions.yml") ? null : filename }
        ]
    }


    //*
    // DEMULTIPLEX AND TRIMMING
    //*

    withName: BCLCONVERT {
        publishDir = [
            [
                path: { "${params.outdir}/${meta.id}/InterOp" },
                mode: params.publish_dir_mode,
                pattern: "**.bin",
                saveAs: {filename -> filename.endsWith('.bin') ? filename : null }
            ],
            [
                // don't write the fastq's
                pattern: "**.fastq.gz",
                enabled: false
            ]
        ]
    }

    withName: UNTAR {
        publishDir = [
            pattern: "*",
            enabled: false
        ]
    }

    withName: FASTP {
        ext.args = [
            "--detect_adapter_for_pe",
            params.skip_trimming    ? "-A" : "",
            params.trim_front   > 0 ? "--trim_front1 ${params.trim_front}" : "",
            params.trim_tail    > 0 ? "--trim_tail1  ${params.trim_tail}" : "",
            params.adapter_R1       ? "--adapter_sequence ${params.adapter_R1}" : "",
            params.adapter_R2       ? "--adapter_sequence ${params.adapter_R2}" : "",
        ].join(" ").trim()
        publishDir = [
            [
                path: { "${params.outdir}/${meta.samplename}" },
                mode: params.publish_dir_mode,
                pattern: "*.{html,json}"
            ],
        ]
    }

    //*
    // ALIGNMENT
    //*
    withName: BOWTIE2_ALIGN {
        publishDir = [enabled: false]
    }

    //*
    // BAMPROCESSING
    //*
    withName: BIOBAMBAM_BAMSORMADUP {
        ext.args = [
            "indexfilename=index.bam.bai",
            "optminpixeldif=2500"
        ].join(" ").trim()
        publishDir = [
            [
                path: { "${params.outdir}/${meta.samplename}" },
                mode: params.publish_dir_mode,
                pattern: "*metrics*"
                saveAs: {filename -> filename.replace("metrics", "duplicate_metrics")}
            ],
        ]
    }

    withName: SAMTOOLS_CONVERT {
        // activate cram compression
        ext.args = "-C --output-fmt-option archive"
        publishDir = [
            [
                path: { "${params.outdir}/${meta.samplename}" },
                mode: params.publish_dir_mode,
            ],
        ]
    }

    //*
    // QC
    //*

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: "*_versions.yml"
        ]
    }

}
